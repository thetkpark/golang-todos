{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample of API server that store todos",
        "title": "Swagger Golang Todo API",
        "contact": {},
        "license": {
            "name": "MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:5000",
    "basePath": "/",
    "paths": {
        "/api/regis": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register the new user",
                "parameters": [
                    {
                        "description": "username and password to create user",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UserCredentialDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "the user is register and token is given back",
                        "schema": {
                            "$ref": "#/definitions/controllers.TokenResponseDto"
                        }
                    },
                    "400": {
                        "description": "Missing some attribute or username is in used",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/api/signin": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login the user",
                "parameters": [
                    {
                        "description": "username and password to login",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UserCredentialDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "the user is login and token is given back",
                        "schema": {
                            "$ref": "#/definitions/controllers.TokenResponseDto"
                        }
                    },
                    "400": {
                        "description": "Missing some attribute or invalid credential",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/api/todo": {
            "get": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
              "produces": [
                "application/json"
              ],
              "tags": [
                "todo"
              ],
              "summary": "Get all todos",
              "responses": {
                "200": {
                  "description": "the list of todos that user have",
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/models.Todo"
                    }
                  }
                },
                "401": {
                  "description": ""
                },
                "500": {
                  "description": "Internal Server Error",
                  "schema": {
                    "$ref": "#/definitions/controllers.ErrorMessage"
                  }
                }
              }
            },
          "post": {
            "security": [
              {
                "JwtAuth": []
              }
            ],
            "consumes": [
              "application/json"
            ],
            "produces": [
              "application/json"
            ],
            "tags": [
              "todo"
            ],
            "summary": "Create todo",
            "parameters": [
              {
                "description": "title of todo to create",
                "name": "body",
                "in": "body",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/controllers.NewTodoDto"
                }
              }
            ],
            "responses": {
              "201": {
                "description": "the list of todos that user have",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/models.Todo"
                  }
                }
              },
              "401": {
                "description": ""
              },
              "500": {
                "description": "Internal Server Error",
                "schema": {
                  "$ref": "#/definitions/controllers.ErrorMessage"
                }
              }
            }
          }
        },
      "/api/todo/{todoId}": {
        "delete": {
          "security": [
            {
              "JwtAuth": []
            }
          ],
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "tags": [
            "todo"
          ],
          "summary": "Delete todo",
          "parameters": [
            {
              "type": "integer",
              "description": "id of todo to delete",
              "name": "todoId",
              "in": "path",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "the list of todos that user have",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/models.Todo"
                }
              }
            },
            "401": {
              "description": ""
            },
            "404": {
              "description": "Todo not found",
              "schema": {
                "$ref": "#/definitions/controllers.ErrorMessage"
              }
            },
            "500": {
              "description": "Internal Server Error",
              "schema": {
                "$ref": "#/definitions/controllers.ErrorMessage"
              }
            }
          }
        },
        "patch": {
          "security": [
            {
              "JwtAuth": []
            }
          ],
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "tags": [
            "todo"
          ],
          "summary": "Finish todo",
          "parameters": [
            {
              "type": "integer",
              "description": "id of todo that finished",
              "name": "todoId",
              "in": "path",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "the list of todos that user have",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/models.Todo"
                }
              }
            },
            "401": {
              "description": ""
            },
            "404": {
              "description": "Todo not found",
              "schema": {
                "$ref": "#/definitions/controllers.ErrorMessage"
              }
            },
            "500": {
              "description": "Internal Server Error",
              "schema": {
                "$ref": "#/definitions/controllers.ErrorMessage"
              }
            }
                }
            }
        }
    },
    "definitions": {
      "controllers.ErrorMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "controllers.NewTodoDto": {
        "type": "object",
        "required": [
          "title"
        ],
        "properties": {
          "title": {
            "type": "string"
          }
        }
      },
      "controllers.TokenResponseDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
        },
        "controllers.UserCredentialDto": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Todo": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_finished": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "JwtAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}